<?php

namespace AppBundle\Entity\Congres;

use Doctrine\ORM\EntityRepository;
use AppBundle\Entity\Instance;

/**
 * ThematicContributionsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ThematicContributionRepository extends EntityRepository
{
    public function getCNVotesCount($contrib)
    {
        $CNCount = $this->createQueryBuilder('tc')
            ->select('COUNT(tc)')
            ->innerJoin('tc.votes', 'u')
            ->innerJoin('u.profile', 'adh')
            ->innerJoin('adh.instances', 'i')
            ->where('tc.id = :contrib')
            ->andWhere('i.name = :iname')
            ->setParameter('contrib', $contrib->getId())
            ->setParameter('iname', Instance::INSTANCE_CN)
            ->getQuery()->getSingleScalarResult();
        return $CNCount;

    }

    public function getVotesCount($contrib)
    {
        $VoteCount = $this->createQueryBuilder('tc')
            ->select('COUNT(tc)')
            ->innerJoin('tc.votes', 'u')
            ->where('tc.id = :contrib')
            ->setParameter('contrib', $contrib->getId())
            ->getQuery()->getSingleScalarResult();
        return $VoteCount;
    }

    public function hasAlreadyVoted($contrib, $user)
    {
        $hasAlreadyVoted = $this->createQueryBuilder('tc')
            ->select('COUNT(tc)')
            ->innerJoin('tc.votes', 'u')
            ->where('u.id = :user')
            ->andWhere('tc.id = :id')
            ->setParameter('user', $user->getId())
            ->setParameter('id', $contrib->getId())
            ->getQuery()->getSingleScalarResult();

        var_dump($hasAlreadyVoted);
        return $hasAlreadyVoted;
    }
}
