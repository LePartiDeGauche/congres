<?php

namespace AppBundle\Entity\Organ;

use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\EntityRepository;
use AppBundle\Entity\Adherent;

/**
 * OrganRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrganRepository extends EntityRepository
{
    protected $classname;

    public function getOrganByAdherent(Adherent $participant)
    {
        $organs = $this->createQueryBuilder('o')
            ->select('o')
            ->leftJoin('o.participants', 'op')
            ->where('op.adherent = :adherent')
            ->setParameter('adherent', $participant->getId())
            ->getQuery();

        return $organs->getResult();
    }

    public function getOrganByAdherentAndTypes(Adherent $participant, $organTypes)
    {
        $qb = $this->createQueryBuilder('o');
        return $qb->select('o')
            ->leftJoin('o.participants', 'op')
            ->add('where', $qb->expr()->andX(
                $qb->expr()->eq('op.adherent', ':adherent'),
                $qb->expr()->in('o.organType', array_walk($organTypes,
                    function ($v, $k) {
                        return $v->getId();
                    }
                ))
            ))
            ->setParameter('adherent', $participant)
            ->getQuery()
            ->getResult();
    }

    public function isMember(Organ $organ, Adherent $adherent)
    {
        $member = $this->createQueryBuilder('o')
            ->select('COUNT(o)')
            ->leftJoin('o.participants', 'op')
            ->where('op.adherent = :adherent')
            ->andWhere('o.id = :organ')
            ->setParameter('adherent', $adherent->getId())
            ->setParameter('organ', $organ->getId())
            ->getQuery()->getSingleScalarResult();

        return !!$member;
    }
}
